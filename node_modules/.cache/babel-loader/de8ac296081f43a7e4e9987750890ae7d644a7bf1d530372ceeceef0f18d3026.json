{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fj181\\\\Desktop\\\\PepeDesarrollo2\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport Sidebar from './components/Sidebar';\nimport Dashboard from './components/Dashboard';\nimport Prospects from './components/Prospects';\nimport Clients from './components/Clients';\nimport Records from './components/Records';\nimport Toast from './components/Toast';\nimport Spinner from './components/Spinner';\nimport MotivoModal from './components/modals/MotivoModal';\nimport ClienteModal from './components/modals/ClienteModal';\nimport { fetchData, getMockData } from './services/api';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Estados para datos y UI\n  const [appData, setAppData] = useState({\n    prospecto: {},\n    contactosClientes: {},\n    expedienteClientes: {}\n  });\n  const [loading, setLoading] = useState(false);\n  const [activeScreen, setActiveScreen] = useState('home');\n  const [toastConfig, setToastConfig] = useState({\n    message: '',\n    type: 'default',\n    show: false\n  });\n  const [unattendedCount, setUnattendedCount] = useState(0);\n\n  // Modal states\n  const [motivoModal, setMotivoModal] = useState({\n    show: false,\n    motivo: '',\n    onSave: null\n  });\n  const [clienteModal, setClienteModal] = useState({\n    show: false,\n    prospecto: null,\n    onSave: null\n  });\n\n  // Barra lateral móvil\n  const [sidebarOpen, setSidebarOpen] = useState(false);\n\n  // Función para mostrar notificaciones toast\n  const showToast = useCallback((message, type = 'default') => {\n    setToastConfig({\n      message,\n      type,\n      show: true\n    });\n\n    // Ocultar automáticamente después de 5 segundos\n    setTimeout(() => {\n      setToastConfig(prev => ({\n        ...prev,\n        show: false\n      }));\n    }, 5000);\n  }, []);\n\n  // Función para cambiar de pantalla\n  const changeScreen = useCallback(screenId => {\n    setActiveScreen(screenId);\n    // Cerrar sidebar en móvil al cambiar de pantalla\n    setSidebarOpen(false);\n  }, []);\n\n  // Función para obtener datos\n  const loadData = useCallback(async () => {\n    setLoading(true);\n    try {\n      // En desarrollo podemos usar datos mock para pruebas\n      // const data = await fetchData(); // Uncomment for production\n      const data = getMockData(); // Mock data for development\n\n      setAppData(data);\n\n      // Calcular prospectos sin atender\n      const prospectosSinAtender = Object.values(data.prospecto || {}).filter(p => !p.contactado && !p['numero-cliente']);\n      setUnattendedCount(prospectosSinAtender.length);\n      setLoading(false);\n      showToast('Datos actualizados correctamente', 'success');\n    } catch (error) {\n      console.error('Error al obtener datos:', error);\n      showToast('Error al cargar los datos', 'error');\n      setLoading(false);\n    }\n  }, [showToast]);\n\n  // Cargar datos al iniciar\n  useEffect(() => {\n    loadData();\n  }, [loadData]);\n\n  // Función para mostrar notificación de prospectos sin atender\n  const showProspectosNotification = () => {\n    // Solo mostrar si hay prospectos sin atender\n    if (unattendedCount > 0) {\n      const message = `Tienes <b>${unattendedCount}</b> <a href=\"#\" onclick=\"navigateToProspects()\" class=\"toast-link\">prospectos</a> sin atender`;\n      showToast(message, 'info');\n    }\n  };\n\n  // Función para guardar cambios en prospecto\n  const handleSaveProspectoChanges = changes => {\n    setLoading(true);\n\n    // Simulación de guardado (aquí se implementaría la llamada a la API)\n    setTimeout(() => {\n      // Actualizar los datos localmente\n      const updatedProspectos = {\n        ...appData.prospecto\n      };\n\n      // Aplicar cambios a cada prospecto modificado\n      Object.entries(changes).forEach(([id, changes]) => {\n        if (updatedProspectos[id]) {\n          updatedProspectos[id] = {\n            ...updatedProspectos[id],\n            ...changes\n          };\n        }\n      });\n\n      // Actualizar el estado de la aplicación\n      setAppData(prev => ({\n        ...prev,\n        prospecto: updatedProspectos\n      }));\n      setLoading(false);\n      showToast('Cambios guardados correctamente', 'success');\n    }, 1000);\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        activeScreen: activeScreen,\n        changeScreen: changeScreen,\n        unattendedCount: unattendedCount,\n        isOpen: sidebarOpen,\n        toggleSidebar: () => setSidebarOpen(!sidebarOpen)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"main-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          className: \"main-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            id: \"screen-title\",\n            children: [activeScreen === 'home' && 'Dashboard', activeScreen === 'prospects' && 'Prospectos', activeScreen === 'clients' && 'Clientes', activeScreen === 'records' && 'Expedientes de Clientes']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header-controls\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"refreshProspects\",\n              className: \"btn-refresh\",\n              onClick: loadData,\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-sync-alt\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 17\n              }, this), \" Actualizar\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"notification-container\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"notification-btn\",\n                onClick: showProspectosNotification,\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-bell\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 19\n                }, this), unattendedCount > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"notification-badge\",\n                  children: unattendedCount\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content-wrapper\",\n          children: [activeScreen === 'home' && /*#__PURE__*/_jsxDEV(Dashboard, {\n            appData: appData,\n            showToast: showToast\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 15\n          }, this), activeScreen === 'prospects' && /*#__PURE__*/_jsxDEV(Prospects, {\n            prospectos: appData.prospecto,\n            showToast: showToast,\n            setMotivoModal: setMotivoModal,\n            setClienteModal: setClienteModal,\n            onSaveChanges: handleSaveProspectoChanges\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this), activeScreen === 'clients' && /*#__PURE__*/_jsxDEV(Clients, {\n            clientes: appData.contactosClientes,\n            showToast: showToast\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this), activeScreen === 'records' && /*#__PURE__*/_jsxDEV(Records, {\n            expedientes: appData.expedienteClientes,\n            showToast: showToast\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MotivoModal, {\n        show: motivoModal.show,\n        motivo: motivoModal.motivo,\n        onSave: motivoModal.onSave,\n        onClose: () => setMotivoModal({\n          ...motivoModal,\n          show: false\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ClienteModal, {\n        show: clienteModal.show,\n        prospecto: clienteModal.prospecto,\n        onSave: clienteModal.onSave,\n        onClose: () => setClienteModal({\n          ...clienteModal,\n          show: false\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Toast, {\n        message: toastConfig.message,\n        type: toastConfig.type,\n        show: toastConfig.show,\n        onClose: () => setToastConfig({\n          ...toastConfig,\n          show: false\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Spinner, {\n        show: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n}\n\n// Función de navegación global para links en toast\n_s(App, \"t0Q94ycXmDuYTvuE4Ri6XNWBU4M=\");\n_c = App;\nwindow.navigateToProspects = () => {\n  var _document$getElementB, _document$getElementB2, _document$getElementB3, _document$getElementB4, _document$getElementB5;\n  const app = (_document$getElementB = document.getElementById('root')) === null || _document$getElementB === void 0 ? void 0 : (_document$getElementB2 = _document$getElementB._reactRootContainer) === null || _document$getElementB2 === void 0 ? void 0 : (_document$getElementB3 = _document$getElementB2._internalRoot) === null || _document$getElementB3 === void 0 ? void 0 : (_document$getElementB4 = _document$getElementB3.current) === null || _document$getElementB4 === void 0 ? void 0 : (_document$getElementB5 = _document$getElementB4.child) === null || _document$getElementB5 === void 0 ? void 0 : _document$getElementB5.stateNode;\n  if (app && typeof app.changeScreen === 'function') {\n    app.changeScreen('prospects');\n  }\n};\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","BrowserRouter","Router","Sidebar","Dashboard","Prospects","Clients","Records","Toast","Spinner","MotivoModal","ClienteModal","fetchData","getMockData","jsxDEV","_jsxDEV","App","_s","appData","setAppData","prospecto","contactosClientes","expedienteClientes","loading","setLoading","activeScreen","setActiveScreen","toastConfig","setToastConfig","message","type","show","unattendedCount","setUnattendedCount","motivoModal","setMotivoModal","motivo","onSave","clienteModal","setClienteModal","sidebarOpen","setSidebarOpen","showToast","setTimeout","prev","changeScreen","screenId","loadData","data","prospectosSinAtender","Object","values","filter","p","contactado","length","error","console","showProspectosNotification","handleSaveProspectoChanges","changes","updatedProspectos","entries","forEach","id","children","className","isOpen","toggleSidebar","fileName","_jsxFileName","lineNumber","columnNumber","onClick","prospectos","onSaveChanges","clientes","expedientes","onClose","_c","window","navigateToProspects","_document$getElementB","_document$getElementB2","_document$getElementB3","_document$getElementB4","_document$getElementB5","app","document","getElementById","_reactRootContainer","_internalRoot","current","child","stateNode","$RefreshReg$"],"sources":["C:/Users/fj181/Desktop/PepeDesarrollo2/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport Sidebar from './components/Sidebar';\r\nimport Dashboard from './components/Dashboard';\r\nimport Prospects from './components/Prospects';\r\nimport Clients from './components/Clients';\r\nimport Records from './components/Records';\r\nimport Toast from './components/Toast';\r\nimport Spinner from './components/Spinner';\r\nimport MotivoModal from './components/modals/MotivoModal';\r\nimport ClienteModal from './components/modals/ClienteModal';\r\nimport { fetchData, getMockData } from './services/api';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  // Estados para datos y UI\r\n  const [appData, setAppData] = useState({\r\n    prospecto: {},\r\n    contactosClientes: {},\r\n    expedienteClientes: {}\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [activeScreen, setActiveScreen] = useState('home');\r\n  const [toastConfig, setToastConfig] = useState({\r\n    message: '',\r\n    type: 'default',\r\n    show: false\r\n  });\r\n  const [unattendedCount, setUnattendedCount] = useState(0);\r\n  \r\n  // Modal states\r\n  const [motivoModal, setMotivoModal] = useState({\r\n    show: false,\r\n    motivo: '',\r\n    onSave: null\r\n  });\r\n  \r\n  const [clienteModal, setClienteModal] = useState({\r\n    show: false,\r\n    prospecto: null,\r\n    onSave: null\r\n  });\r\n  \r\n  // Barra lateral móvil\r\n  const [sidebarOpen, setSidebarOpen] = useState(false);\r\n\r\n  // Función para mostrar notificaciones toast\r\n  const showToast = useCallback((message, type = 'default') => {\r\n    setToastConfig({\r\n      message,\r\n      type,\r\n      show: true\r\n    });\r\n    \r\n    // Ocultar automáticamente después de 5 segundos\r\n    setTimeout(() => {\r\n      setToastConfig(prev => ({...prev, show: false}));\r\n    }, 5000);\r\n  }, []);\r\n\r\n  // Función para cambiar de pantalla\r\n  const changeScreen = useCallback((screenId) => {\r\n    setActiveScreen(screenId);\r\n    // Cerrar sidebar en móvil al cambiar de pantalla\r\n    setSidebarOpen(false);\r\n  }, []);\r\n\r\n  // Función para obtener datos\r\n  const loadData = useCallback(async () => {\r\n    setLoading(true);\r\n    try {\r\n      // En desarrollo podemos usar datos mock para pruebas\r\n      // const data = await fetchData(); // Uncomment for production\r\n      const data = getMockData(); // Mock data for development\r\n      \r\n      setAppData(data);\r\n      \r\n      // Calcular prospectos sin atender\r\n      const prospectosSinAtender = Object.values(data.prospecto || {}).filter(\r\n        p => !p.contactado && !p['numero-cliente']\r\n      );\r\n      setUnattendedCount(prospectosSinAtender.length);\r\n      \r\n      setLoading(false);\r\n      showToast('Datos actualizados correctamente', 'success');\r\n    } catch (error) {\r\n      console.error('Error al obtener datos:', error);\r\n      showToast('Error al cargar los datos', 'error');\r\n      setLoading(false);\r\n    }\r\n  }, [showToast]);\r\n\r\n  // Cargar datos al iniciar\r\n  useEffect(() => {\r\n    loadData();\r\n  }, [loadData]);\r\n\r\n  // Función para mostrar notificación de prospectos sin atender\r\n  const showProspectosNotification = () => {\r\n    // Solo mostrar si hay prospectos sin atender\r\n    if (unattendedCount > 0) {\r\n      const message = `Tienes <b>${unattendedCount}</b> <a href=\"#\" onclick=\"navigateToProspects()\" class=\"toast-link\">prospectos</a> sin atender`;\r\n      showToast(message, 'info');\r\n    }\r\n  };\r\n\r\n  // Función para guardar cambios en prospecto\r\n  const handleSaveProspectoChanges = (changes) => {\r\n    setLoading(true);\r\n    \r\n    // Simulación de guardado (aquí se implementaría la llamada a la API)\r\n    setTimeout(() => {\r\n      // Actualizar los datos localmente\r\n      const updatedProspectos = { ...appData.prospecto };\r\n      \r\n      // Aplicar cambios a cada prospecto modificado\r\n      Object.entries(changes).forEach(([id, changes]) => {\r\n        if (updatedProspectos[id]) {\r\n          updatedProspectos[id] = {\r\n            ...updatedProspectos[id],\r\n            ...changes\r\n          };\r\n        }\r\n      });\r\n      \r\n      // Actualizar el estado de la aplicación\r\n      setAppData(prev => ({\r\n        ...prev,\r\n        prospecto: updatedProspectos\r\n      }));\r\n      \r\n      setLoading(false);\r\n      showToast('Cambios guardados correctamente', 'success');\r\n    }, 1000);\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"app-container\">\r\n        <Sidebar \r\n          activeScreen={activeScreen} \r\n          changeScreen={changeScreen}\r\n          unattendedCount={unattendedCount}\r\n          isOpen={sidebarOpen}\r\n          toggleSidebar={() => setSidebarOpen(!sidebarOpen)}\r\n        />\r\n        \r\n        <main className=\"main-content\">\r\n          <header className=\"main-header\">\r\n            <h1 id=\"screen-title\">\r\n              {activeScreen === 'home' && 'Dashboard'}\r\n              {activeScreen === 'prospects' && 'Prospectos'}\r\n              {activeScreen === 'clients' && 'Clientes'}\r\n              {activeScreen === 'records' && 'Expedientes de Clientes'}\r\n            </h1>\r\n            <div className=\"header-controls\">\r\n              <button id=\"refreshProspects\" className=\"btn-refresh\" onClick={loadData}>\r\n                <i className=\"fas fa-sync-alt\"></i> Actualizar\r\n              </button>\r\n              <div className=\"notification-container\">\r\n                <button \r\n                  className=\"notification-btn\" \r\n                  onClick={showProspectosNotification}\r\n                >\r\n                  <i className=\"fas fa-bell\"></i>\r\n                  {unattendedCount > 0 && (\r\n                    <span className=\"notification-badge\">{unattendedCount}</span>\r\n                  )}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </header>\r\n\r\n          <div className=\"content-wrapper\">\r\n            {activeScreen === 'home' && (\r\n              <Dashboard \r\n                appData={appData} \r\n                showToast={showToast}\r\n              />\r\n            )}\r\n            \r\n            {activeScreen === 'prospects' && (\r\n              <Prospects \r\n                prospectos={appData.prospecto} \r\n                showToast={showToast}\r\n                setMotivoModal={setMotivoModal}\r\n                setClienteModal={setClienteModal}\r\n                onSaveChanges={handleSaveProspectoChanges}\r\n              />\r\n            )}\r\n            \r\n            {activeScreen === 'clients' && (\r\n              <Clients \r\n                clientes={appData.contactosClientes} \r\n                showToast={showToast}\r\n              />\r\n            )}\r\n            \r\n            {activeScreen === 'records' && (\r\n              <Records \r\n                expedientes={appData.expedienteClientes} \r\n                showToast={showToast}\r\n              />\r\n            )}\r\n          </div>\r\n        </main>\r\n\r\n        {/* Modales */}\r\n        <MotivoModal \r\n          show={motivoModal.show}\r\n          motivo={motivoModal.motivo}\r\n          onSave={motivoModal.onSave}\r\n          onClose={() => setMotivoModal({...motivoModal, show: false})}\r\n        />\r\n        \r\n        <ClienteModal \r\n          show={clienteModal.show}\r\n          prospecto={clienteModal.prospecto}\r\n          onSave={clienteModal.onSave}\r\n          onClose={() => setClienteModal({...clienteModal, show: false})}\r\n        />\r\n\r\n        {/* Toast y Spinner */}\r\n        <Toast \r\n          message={toastConfig.message} \r\n          type={toastConfig.type} \r\n          show={toastConfig.show} \r\n          onClose={() => setToastConfig({...toastConfig, show: false})}\r\n        />\r\n        \r\n        <Spinner show={loading} />\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\n// Función de navegación global para links en toast\r\nwindow.navigateToProspects = () => {\r\n  const app = document.getElementById('root')?._reactRootContainer?._internalRoot?.current?.child?.stateNode;\r\n  if (app && typeof app.changeScreen === 'function') {\r\n    app.changeScreen('prospects');\r\n  }\r\n};\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}