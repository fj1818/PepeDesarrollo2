{"ast":null,"code":"// Servicio para manejar las llamadas a la API\n\nconst API_URL = 'https://script.google.com/macros/s/AKfycbxeU3BNj9_535JZWBZWnNZkzTgRu8T4ngJXWuolJndij_N0yCYbPUvOnkLLPI_pa2eoQw/exec';\nexport const fetchData = async () => {\n  try {\n    // Agregar timestamp para evitar caché\n    const url = `${API_URL}?timestamp=${new Date().getTime()}`;\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error('Error en la respuesta del servidor');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error al obtener los datos:', error);\n    throw error;\n  }\n};\nexport const saveData = async data => {\n  try {\n    // Aquí implementaríamos la lógica para guardar datos\n    // En una implementación real, esto haría un POST al backend\n    console.log('Datos a guardar:', data);\n\n    // Simulación de llamada exitosa\n    return {\n      success: true,\n      message: 'Datos guardados correctamente'\n    };\n  } catch (error) {\n    console.error('Error al guardar los datos:', error);\n    throw error;\n  }\n};\n\n// Para desarrollo/pruebas\nexport const getMockData = () => {\n  return {\n    prospecto: {\n      \"1\": {\n        \"id-prospecto\": \"1\",\n        \"nombre-prospecto\": \"Carlos Dominguez\",\n        \"telefono\": \"8888888888\",\n        \"email\": \"f@gmail.com\",\n        \"ubicacion\": \"Monterrey, Nuevo León\",\n        \"canal\": \"instagram\",\n        \"fecha-prospecto\": \"10/03/2025 08:49 p.m.\",\n        \"contactado\": true,\n        \"interesado\": false,\n        \"motivo\": \"\",\n        \"numero-cliente\": \"\"\n      },\n      \"2\": {\n        \"id-prospecto\": \"2\",\n        \"nombre-prospecto\": \"Ana Martinez\",\n        \"telefono\": \"5555555555\",\n        \"email\": \"5555@of.com\",\n        \"ubicacion\": \"San Pedro Garza García, Nuevo León\",\n        \"canal\": \"twitter\",\n        \"fecha-prospecto\": \"08/03/2025 02:49 p.m.\",\n        \"contactado\": true,\n        \"interesado\": false,\n        \"motivo\": \"\",\n        \"numero-cliente\": \"\"\n      },\n      \"3\": {\n        \"id-prospecto\": \"3\",\n        \"nombre-prospecto\": \"Juan Pérez\",\n        \"telefono\": \"3333333333\",\n        \"email\": \"3q@d.com\",\n        \"ubicacion\": \"San Pedro Garza García, Nuevo León\",\n        \"canal\": \"instagram\",\n        \"fecha-prospecto\": \"08/03/2025 12:00 a.m.\",\n        \"contactado\": true,\n        \"interesado\": false,\n        \"motivo\": \"adadada\",\n        \"numero-cliente\": \"\"\n      }\n    },\n    contactosClientes: {\n      \"1\": {\n        \"id\": \"CLI-123456\",\n        \"nombre\": \"Cliente 1\",\n        \"telefono\": \"1234567890\",\n        \"email\": \"cliente1@example.com\",\n        \"ubicacion\": \"Monterrey, NL\",\n        \"fechaAlta\": \"15/01/2023\"\n      },\n      \"2\": {\n        \"id\": \"CLI-234567\",\n        \"nombre\": \"Cliente 2\",\n        \"telefono\": \"2345678901\",\n        \"email\": \"cliente2@example.com\",\n        \"ubicacion\": \"San Pedro, NL\",\n        \"fechaAlta\": \"20/02/2023\"\n      },\n      \"3\": {\n        \"id\": \"CLI-345678\",\n        \"nombre\": \"Cliente 3\",\n        \"telefono\": \"3456789012\",\n        \"email\": \"cliente3@example.com\",\n        \"ubicacion\": \"Guadalupe, NL\",\n        \"fechaAlta\": \"10/03/2023\"\n      }\n    },\n    expedienteClientes: {\n      \"1\": {\n        \"id\": \"EXP-001\",\n        \"cliente\": \"Cliente 1\",\n        \"tipo\": \"Contrato\",\n        \"fechaApertura\": \"20/01/2023\",\n        \"estado\": \"abierto\"\n      },\n      \"2\": {\n        \"id\": \"EXP-002\",\n        \"cliente\": \"Cliente 2\",\n        \"tipo\": \"Servicio\",\n        \"fechaApertura\": \"25/02/2023\",\n        \"estado\": \"cerrado\"\n      }\n    }\n  };\n};","map":{"version":3,"names":["API_URL","fetchData","url","Date","getTime","response","fetch","ok","Error","data","json","error","console","saveData","log","success","message","getMockData","prospecto","contactosClientes","expedienteClientes"],"sources":["C:/Users/fj181/Desktop/PepeDesarrollo2/src/services/api.js"],"sourcesContent":["// Servicio para manejar las llamadas a la API\r\n\r\nconst API_URL = 'https://script.google.com/macros/s/AKfycbxeU3BNj9_535JZWBZWnNZkzTgRu8T4ngJXWuolJndij_N0yCYbPUvOnkLLPI_pa2eoQw/exec';\r\n\r\nexport const fetchData = async () => {\r\n  try {\r\n    // Agregar timestamp para evitar caché\r\n    const url = `${API_URL}?timestamp=${new Date().getTime()}`;\r\n    \r\n    const response = await fetch(url);\r\n    \r\n    if (!response.ok) {\r\n      throw new Error('Error en la respuesta del servidor');\r\n    }\r\n    \r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Error al obtener los datos:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const saveData = async (data) => {\r\n  try {\r\n    // Aquí implementaríamos la lógica para guardar datos\r\n    // En una implementación real, esto haría un POST al backend\r\n    console.log('Datos a guardar:', data);\r\n    \r\n    // Simulación de llamada exitosa\r\n    return { success: true, message: 'Datos guardados correctamente' };\r\n  } catch (error) {\r\n    console.error('Error al guardar los datos:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Para desarrollo/pruebas\r\nexport const getMockData = () => {\r\n  return {\r\n    prospecto: {\r\n      \"1\": {\r\n        \"id-prospecto\": \"1\",\r\n        \"nombre-prospecto\": \"Carlos Dominguez\",\r\n        \"telefono\": \"8888888888\",\r\n        \"email\": \"f@gmail.com\",\r\n        \"ubicacion\": \"Monterrey, Nuevo León\",\r\n        \"canal\": \"instagram\",\r\n        \"fecha-prospecto\": \"10/03/2025 08:49 p.m.\",\r\n        \"contactado\": true,\r\n        \"interesado\": false,\r\n        \"motivo\": \"\",\r\n        \"numero-cliente\": \"\"\r\n      },\r\n      \"2\": {\r\n        \"id-prospecto\": \"2\",\r\n        \"nombre-prospecto\": \"Ana Martinez\",\r\n        \"telefono\": \"5555555555\",\r\n        \"email\": \"5555@of.com\",\r\n        \"ubicacion\": \"San Pedro Garza García, Nuevo León\",\r\n        \"canal\": \"twitter\",\r\n        \"fecha-prospecto\": \"08/03/2025 02:49 p.m.\",\r\n        \"contactado\": true,\r\n        \"interesado\": false,\r\n        \"motivo\": \"\",\r\n        \"numero-cliente\": \"\"\r\n      },\r\n      \"3\": {\r\n        \"id-prospecto\": \"3\",\r\n        \"nombre-prospecto\": \"Juan Pérez\",\r\n        \"telefono\": \"3333333333\",\r\n        \"email\": \"3q@d.com\",\r\n        \"ubicacion\": \"San Pedro Garza García, Nuevo León\",\r\n        \"canal\": \"instagram\",\r\n        \"fecha-prospecto\": \"08/03/2025 12:00 a.m.\",\r\n        \"contactado\": true,\r\n        \"interesado\": false,\r\n        \"motivo\": \"adadada\",\r\n        \"numero-cliente\": \"\"\r\n      }\r\n    },\r\n    contactosClientes: {\r\n      \"1\": { \r\n        \"id\": \"CLI-123456\", \r\n        \"nombre\": \"Cliente 1\",\r\n        \"telefono\": \"1234567890\",\r\n        \"email\": \"cliente1@example.com\",\r\n        \"ubicacion\": \"Monterrey, NL\",\r\n        \"fechaAlta\": \"15/01/2023\"\r\n      },\r\n      \"2\": { \r\n        \"id\": \"CLI-234567\", \r\n        \"nombre\": \"Cliente 2\",\r\n        \"telefono\": \"2345678901\",\r\n        \"email\": \"cliente2@example.com\",\r\n        \"ubicacion\": \"San Pedro, NL\",\r\n        \"fechaAlta\": \"20/02/2023\"\r\n      },\r\n      \"3\": { \r\n        \"id\": \"CLI-345678\", \r\n        \"nombre\": \"Cliente 3\",\r\n        \"telefono\": \"3456789012\",\r\n        \"email\": \"cliente3@example.com\",\r\n        \"ubicacion\": \"Guadalupe, NL\",\r\n        \"fechaAlta\": \"10/03/2023\"\r\n      }\r\n    },\r\n    expedienteClientes: {\r\n      \"1\": { \r\n        \"id\": \"EXP-001\", \r\n        \"cliente\": \"Cliente 1\",\r\n        \"tipo\": \"Contrato\",\r\n        \"fechaApertura\": \"20/01/2023\",\r\n        \"estado\": \"abierto\"\r\n      },\r\n      \"2\": { \r\n        \"id\": \"EXP-002\", \r\n        \"cliente\": \"Cliente 2\",\r\n        \"tipo\": \"Servicio\", \r\n        \"fechaApertura\": \"25/02/2023\",\r\n        \"estado\": \"cerrado\"\r\n      }\r\n    }\r\n  };\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}