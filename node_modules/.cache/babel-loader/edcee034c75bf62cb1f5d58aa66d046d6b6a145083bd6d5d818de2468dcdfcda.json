{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fj181\\\\Desktop\\\\PepeDesarrollo2\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport Sidebar from './components/Sidebar';\nimport Dashboard from './components/Dashboard';\nimport Prospects from './components/Prospects';\nimport Clients from './components/Clients';\nimport Records from './components/Records';\nimport Toast from './components/Toast';\nimport Spinner from './components/Spinner';\nimport MotivoModal from './components/modals/MotivoModal';\nimport ClienteModal from './components/modals/ClienteModal';\nimport { fetchData } from './services/api';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Estados para datos y UI\n  const [appData, setAppData] = useState({\n    prospecto: {},\n    contactosClientes: {},\n    expedienteClientes: {}\n  });\n  const [loading, setLoading] = useState(true); // Comienza con loading true\n  const [activeScreen, setActiveScreen] = useState('home');\n  const [toastConfig, setToastConfig] = useState({\n    message: '',\n    type: 'default',\n    show: false\n  });\n  const [unattendedCount, setUnattendedCount] = useState(0);\n\n  // Modal states\n  const [motivoModal, setMotivoModal] = useState({\n    show: false,\n    motivo: '',\n    onSave: null\n  });\n  const [clienteModal, setClienteModal] = useState({\n    show: false,\n    prospecto: null,\n    onSave: null\n  });\n\n  // Barra lateral móvil\n  const [sidebarOpen, setSidebarOpen] = useState(false);\n\n  // Cargar datos de la API\n  const loadData = useCallback(async () => {\n    try {\n      setLoading(true); // Activar spinner explícitamente\n\n      const data = await fetchData();\n      setAppData(data);\n\n      // Calcular prospectos no atendidos (sin contactar)\n      if (data.prospecto) {\n        const unattended = Object.values(data.prospecto).filter(p => !p.contactado).length;\n        setUnattendedCount(unattended);\n      }\n    } catch (error) {\n      console.error('Error al cargar datos:', error);\n      showToast('Error al cargar datos. Inténtelo de nuevo más tarde.', 'error');\n    } finally {\n      // Pequeño retraso para asegurar que el spinner sea visible\n      setTimeout(() => {\n        setLoading(false);\n      }, 500);\n    }\n  }, []);\n  useEffect(() => {\n    loadData();\n\n    // Opcionalmente, configurar un intervalo para actualizar datos\n    const interval = setInterval(() => {\n      loadData();\n    }, 300000); // Actualizar cada 5 minutos\n\n    return () => clearInterval(interval);\n  }, [loadData]);\n\n  // Funciones para mostrar Toast\n  const showToast = (message, type = 'default') => {\n    setToastConfig({\n      message,\n      type,\n      show: true\n    });\n\n    // Auto-ocultar después de 5 segundos\n    setTimeout(() => {\n      setToastConfig(prev => ({\n        ...prev,\n        show: false\n      }));\n    }, 5000);\n  };\n\n  // Cambiar pantalla activa\n  const changeScreen = screen => {\n    setActiveScreen(screen);\n    setSidebarOpen(false); // Cerrar sidebar en móvil al navegar\n  };\n\n  // Toggle sidebar en móvil\n  const toggleSidebar = () => {\n    setSidebarOpen(!sidebarOpen);\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        activeScreen: activeScreen,\n        changeScreen: changeScreen,\n        unattendedCount: unattendedCount,\n        isOpen: sidebarOpen,\n        toggleSidebar: toggleSidebar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"content-area\",\n        children: [activeScreen === 'home' && /*#__PURE__*/_jsxDEV(Dashboard, {\n          prospectos: appData.prospecto,\n          clientes: appData.contactosClientes,\n          expedientes: appData.expedienteClientes,\n          refreshData: loadData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this), activeScreen === 'prospects' && /*#__PURE__*/_jsxDEV(Prospects, {\n          prospectos: appData.prospecto,\n          refreshData: loadData,\n          showToast: showToast,\n          openMotivoModal: (motivo, onSave) => setMotivoModal({\n            show: true,\n            motivo,\n            onSave\n          }),\n          openClienteModal: (prospecto, onSave) => setClienteModal({\n            show: true,\n            prospecto,\n            onSave\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this), activeScreen === 'clients' && /*#__PURE__*/_jsxDEV(Clients, {\n          clientes: appData.contactosClientes,\n          showToast: showToast\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this), activeScreen === 'records' && /*#__PURE__*/_jsxDEV(Records, {\n          expedientes: appData.expedienteClientes,\n          showToast: showToast\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MotivoModal, {\n        show: motivoModal.show,\n        motivo: motivoModal.motivo,\n        onSave: motivoModal.onSave,\n        onClose: () => setMotivoModal({\n          ...motivoModal,\n          show: false\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ClienteModal, {\n        show: clienteModal.show,\n        prospecto: clienteModal.prospecto,\n        onSave: clienteModal.onSave,\n        onClose: () => setClienteModal({\n          ...clienteModal,\n          show: false\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Toast, {\n        message: toastConfig.message,\n        type: toastConfig.type,\n        show: toastConfig.show,\n        onClose: () => setToastConfig({\n          ...toastConfig,\n          show: false\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Spinner, {\n        show: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n}\n\n// Función de navegación global para links en toast\n_s(App, \"Q8+tTRjK9fPnsNvR6vebPaG95SE=\");\n_c = App;\nwindow.navigateToProspects = () => {\n  var _document$getElementB, _document$getElementB2, _document$getElementB3, _document$getElementB4, _document$getElementB5;\n  const app = (_document$getElementB = document.getElementById('root')) === null || _document$getElementB === void 0 ? void 0 : (_document$getElementB2 = _document$getElementB._reactRootContainer) === null || _document$getElementB2 === void 0 ? void 0 : (_document$getElementB3 = _document$getElementB2._internalRoot) === null || _document$getElementB3 === void 0 ? void 0 : (_document$getElementB4 = _document$getElementB3.current) === null || _document$getElementB4 === void 0 ? void 0 : (_document$getElementB5 = _document$getElementB4.child) === null || _document$getElementB5 === void 0 ? void 0 : _document$getElementB5.stateNode;\n  if (app && typeof app.changeScreen === 'function') {\n    app.changeScreen('prospects');\n  }\n};\nwindow.navigateToClients = () => {\n  var _document$getElementB6, _document$getElementB7, _document$getElementB8, _document$getElementB9, _document$getElementB10;\n  const app = (_document$getElementB6 = document.getElementById('root')) === null || _document$getElementB6 === void 0 ? void 0 : (_document$getElementB7 = _document$getElementB6._reactRootContainer) === null || _document$getElementB7 === void 0 ? void 0 : (_document$getElementB8 = _document$getElementB7._internalRoot) === null || _document$getElementB8 === void 0 ? void 0 : (_document$getElementB9 = _document$getElementB8.current) === null || _document$getElementB9 === void 0 ? void 0 : (_document$getElementB10 = _document$getElementB9.child) === null || _document$getElementB10 === void 0 ? void 0 : _document$getElementB10.stateNode;\n  if (app && typeof app.changeScreen === 'function') {\n    app.changeScreen('clients');\n  }\n};\nwindow.navigateToRecords = () => {\n  var _document$getElementB11, _document$getElementB12, _document$getElementB13, _document$getElementB14, _document$getElementB15;\n  const app = (_document$getElementB11 = document.getElementById('root')) === null || _document$getElementB11 === void 0 ? void 0 : (_document$getElementB12 = _document$getElementB11._reactRootContainer) === null || _document$getElementB12 === void 0 ? void 0 : (_document$getElementB13 = _document$getElementB12._internalRoot) === null || _document$getElementB13 === void 0 ? void 0 : (_document$getElementB14 = _document$getElementB13.current) === null || _document$getElementB14 === void 0 ? void 0 : (_document$getElementB15 = _document$getElementB14.child) === null || _document$getElementB15 === void 0 ? void 0 : _document$getElementB15.stateNode;\n  if (app && typeof app.changeScreen === 'function') {\n    app.changeScreen('records');\n  }\n};\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","BrowserRouter","Router","Sidebar","Dashboard","Prospects","Clients","Records","Toast","Spinner","MotivoModal","ClienteModal","fetchData","jsxDEV","_jsxDEV","App","_s","appData","setAppData","prospecto","contactosClientes","expedienteClientes","loading","setLoading","activeScreen","setActiveScreen","toastConfig","setToastConfig","message","type","show","unattendedCount","setUnattendedCount","motivoModal","setMotivoModal","motivo","onSave","clienteModal","setClienteModal","sidebarOpen","setSidebarOpen","loadData","data","unattended","Object","values","filter","p","contactado","length","error","console","showToast","setTimeout","interval","setInterval","clearInterval","prev","changeScreen","screen","toggleSidebar","children","className","isOpen","fileName","_jsxFileName","lineNumber","columnNumber","prospectos","clientes","expedientes","refreshData","openMotivoModal","openClienteModal","onClose","_c","window","navigateToProspects","_document$getElementB","_document$getElementB2","_document$getElementB3","_document$getElementB4","_document$getElementB5","app","document","getElementById","_reactRootContainer","_internalRoot","current","child","stateNode","navigateToClients","_document$getElementB6","_document$getElementB7","_document$getElementB8","_document$getElementB9","_document$getElementB10","navigateToRecords","_document$getElementB11","_document$getElementB12","_document$getElementB13","_document$getElementB14","_document$getElementB15","$RefreshReg$"],"sources":["C:/Users/fj181/Desktop/PepeDesarrollo2/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport Sidebar from './components/Sidebar';\r\nimport Dashboard from './components/Dashboard';\r\nimport Prospects from './components/Prospects';\r\nimport Clients from './components/Clients';\r\nimport Records from './components/Records';\r\nimport Toast from './components/Toast';\r\nimport Spinner from './components/Spinner';\r\nimport MotivoModal from './components/modals/MotivoModal';\r\nimport ClienteModal from './components/modals/ClienteModal';\r\nimport { fetchData } from './services/api';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  // Estados para datos y UI\r\n  const [appData, setAppData] = useState({\r\n    prospecto: {},\r\n    contactosClientes: {},\r\n    expedienteClientes: {}\r\n  });\r\n  const [loading, setLoading] = useState(true); // Comienza con loading true\r\n  const [activeScreen, setActiveScreen] = useState('home');\r\n  const [toastConfig, setToastConfig] = useState({\r\n    message: '',\r\n    type: 'default',\r\n    show: false\r\n  });\r\n  const [unattendedCount, setUnattendedCount] = useState(0);\r\n  \r\n  // Modal states\r\n  const [motivoModal, setMotivoModal] = useState({\r\n    show: false,\r\n    motivo: '',\r\n    onSave: null\r\n  });\r\n  \r\n  const [clienteModal, setClienteModal] = useState({\r\n    show: false,\r\n    prospecto: null,\r\n    onSave: null\r\n  });\r\n  \r\n  // Barra lateral móvil\r\n  const [sidebarOpen, setSidebarOpen] = useState(false);\r\n\r\n  // Cargar datos de la API\r\n  const loadData = useCallback(async () => {\r\n    try {\r\n      setLoading(true); // Activar spinner explícitamente\r\n      \r\n      const data = await fetchData();\r\n      setAppData(data);\r\n      \r\n      // Calcular prospectos no atendidos (sin contactar)\r\n      if (data.prospecto) {\r\n        const unattended = Object.values(data.prospecto).filter(\r\n          p => !p.contactado\r\n        ).length;\r\n        setUnattendedCount(unattended);\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.error('Error al cargar datos:', error);\r\n      showToast('Error al cargar datos. Inténtelo de nuevo más tarde.', 'error');\r\n    } finally {\r\n      // Pequeño retraso para asegurar que el spinner sea visible\r\n      setTimeout(() => {\r\n        setLoading(false);\r\n      }, 500);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n    \r\n    // Opcionalmente, configurar un intervalo para actualizar datos\r\n    const interval = setInterval(() => {\r\n      loadData();\r\n    }, 300000); // Actualizar cada 5 minutos\r\n    \r\n    return () => clearInterval(interval);\r\n  }, [loadData]);\r\n\r\n  // Funciones para mostrar Toast\r\n  const showToast = (message, type = 'default') => {\r\n    setToastConfig({\r\n      message,\r\n      type,\r\n      show: true\r\n    });\r\n    \r\n    // Auto-ocultar después de 5 segundos\r\n    setTimeout(() => {\r\n      setToastConfig(prev => ({ ...prev, show: false }));\r\n    }, 5000);\r\n  };\r\n\r\n  // Cambiar pantalla activa\r\n  const changeScreen = (screen) => {\r\n    setActiveScreen(screen);\r\n    setSidebarOpen(false); // Cerrar sidebar en móvil al navegar\r\n  };\r\n\r\n  // Toggle sidebar en móvil\r\n  const toggleSidebar = () => {\r\n    setSidebarOpen(!sidebarOpen);\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"app-container\">\r\n        <Sidebar \r\n          activeScreen={activeScreen} \r\n          changeScreen={changeScreen}\r\n          unattendedCount={unattendedCount}\r\n          isOpen={sidebarOpen}\r\n          toggleSidebar={toggleSidebar}\r\n        />\r\n        \r\n        <main className=\"content-area\">\r\n          {activeScreen === 'home' && (\r\n            <Dashboard \r\n              prospectos={appData.prospecto} \r\n              clientes={appData.contactosClientes}\r\n              expedientes={appData.expedienteClientes}\r\n              refreshData={loadData}\r\n            />\r\n          )}\r\n          \r\n          {activeScreen === 'prospects' && (\r\n            <Prospects \r\n              prospectos={appData.prospecto} \r\n              refreshData={loadData}\r\n              showToast={showToast}\r\n              openMotivoModal={(motivo, onSave) => \r\n                setMotivoModal({ show: true, motivo, onSave })\r\n              }\r\n              openClienteModal={(prospecto, onSave) => \r\n                setClienteModal({ show: true, prospecto, onSave })\r\n              }\r\n            />\r\n          )}\r\n          \r\n          {activeScreen === 'clients' && (\r\n            <Clients \r\n              clientes={appData.contactosClientes}\r\n              showToast={showToast}\r\n            />\r\n          )}\r\n          \r\n          {activeScreen === 'records' && (\r\n            <Records \r\n              expedientes={appData.expedienteClientes}\r\n              showToast={showToast}\r\n            />\r\n          )}\r\n        </main>\r\n        \r\n        {/* Modales */}\r\n        <MotivoModal \r\n          show={motivoModal.show}\r\n          motivo={motivoModal.motivo}\r\n          onSave={motivoModal.onSave}\r\n          onClose={() => setMotivoModal({...motivoModal, show: false})}\r\n        />\r\n        \r\n        <ClienteModal \r\n          show={clienteModal.show}\r\n          prospecto={clienteModal.prospecto}\r\n          onSave={clienteModal.onSave}\r\n          onClose={() => setClienteModal({...clienteModal, show: false})}\r\n        />\r\n\r\n        {/* Toast y Spinner */}\r\n        <Toast \r\n          message={toastConfig.message} \r\n          type={toastConfig.type} \r\n          show={toastConfig.show} \r\n          onClose={() => setToastConfig({...toastConfig, show: false})}\r\n        />\r\n        \r\n        <Spinner show={loading} />\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\n// Función de navegación global para links en toast\r\nwindow.navigateToProspects = () => {\r\n  const app = document.getElementById('root')?._reactRootContainer?._internalRoot?.current?.child?.stateNode;\r\n  if (app && typeof app.changeScreen === 'function') {\r\n    app.changeScreen('prospects');\r\n  }\r\n};\r\n\r\nwindow.navigateToClients = () => {\r\n  const app = document.getElementById('root')?._reactRootContainer?._internalRoot?.current?.child?.stateNode;\r\n  if (app && typeof app.changeScreen === 'function') {\r\n    app.changeScreen('clients');\r\n  }\r\n};\r\n\r\nwindow.navigateToRecords = () => {\r\n  const app = document.getElementById('root')?._reactRootContainer?._internalRoot?.current?.child?.stateNode;\r\n  if (app && typeof app.changeScreen === 'function') {\r\n    app.changeScreen('records');\r\n  }\r\n};\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}